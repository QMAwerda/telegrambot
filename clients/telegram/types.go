package telegram

// тут будут все типы, с которыми будет работать наш клиент

type UpdatesResponse struct {
	Ok     bool     `json:"ok"`
	Result []Update `json:"result"`
}

// В этом типе буде вся необходимая информация для апдейта, которую нам вернет телеграм
// Чтобы корректно составить поля этого типа, нужно взглянуть на документацию телеграм бота.
// Теги помогут нам корректно парсить входящий json. По умолчанию он в нем будет искать поле ID.
// Но телеграм вернет нам json с полем update_id, так написано в доке. Поэтому делаем тег, чтоб парсить
// полученный json в нашу структуру.
type Update struct {
	ID      int    `json:"update_id"`
	Message string `json:"message"`
}

// В доке написано, что от функции getUpdates мы будем получать не только Update, а еще и доп инфа на каждый запрос.
// В каждом ответе мы будем получать булевое значение "ok" (и, если оно правда "ok"), то мы получим поле result, в котором
// в случае getUpdates(), уже будут лежать апдейты.
